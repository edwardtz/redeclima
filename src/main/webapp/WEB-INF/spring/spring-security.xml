<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   					   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	    				   http://www.springframework.org/schema/security 
		                   http://www.springframework.org/schema/security/spring-security-3.0.xsd">
						   
	 <!-- Ativa Spring Security -->
	<security:global-method-security secured-annotations="enabled"/>
	
	<security:http auto-config="true" use-expressions="true" >
		<security:intercept-url pattern="/views/estacoes/listadoEstacoes.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/estacoes/estacao.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/usuarios/listadoUsuarios.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/usuarios/usuario.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/bacias/listadoBacias.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/bacias/configuracaoBacia.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/bacias/bacia.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/grades/listadoGrades.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/grades/grade.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/areasRecorte/areaRecorte.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/areasRecorte/listadoAreasRecorte.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/monitoramento/exportacaoPrevisao.jsf" access="hasRole('ADMINISTRADOR') or hasRole('PESQUISADOR') or hasRole('GESTOR')" />
		<security:intercept-url pattern="/views/monitoramento/monitoramentoBaciaMap.jsf" access="hasRole('ADMINISTRADOR') or hasRole('PESQUISADOR') or hasRole('GESTOR')" />
		<security:intercept-url pattern="/views/simulacao/panelSimulacao.jsf" access="hasRole('ADMINISTRADOR') or hasRole('PESQUISADOR') or hasRole('GESTOR')" />
		<security:intercept-url pattern="/views/simulacao/panelSimulacaoObservada.jsf" access="hasRole('ADMINISTRADOR') or hasRole('PESQUISADOR') or hasRole('GESTOR')" />
		<security:intercept-url pattern="/views/documentacao/listaDocumentacao.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/documentacao/documento.jsf" access="hasRole('ADMINISTRADOR')" />
		<security:intercept-url pattern="/views/dados/dadosPrevisao.jsf" access="hasRole('ADMINISTRADOR') or hasRole('PESQUISADOR') or hasRole('GESTOR')" />
		<security:intercept-url pattern="/views/dados/panelSimulacaoSerie.jsf" access="hasRole('ADMINISTRADOR') or hasRole('PESQUISADOR') or hasRole('GESTOR')" />
		<security:form-login login-page="/login.jsf" default-target-url="/home.jsf" authentication-failure-url="/login.jsf?erro=true" />
		<security:logout logout-success-url="/home.jsf" />
	</security:http>
	
	<security:authentication-manager>
	   <security:authentication-provider>
		<security:jdbc-user-service data-source-ref="dataSource"
 
		   users-by-username-query="
		      select login, password, ativo 
		      from t_usuario where login=?" 
 
		   authorities-by-username-query="
		      select u.login, p.nome from t_usuario u, t_perfil p 
		      where u.id_perfil = p.id_perfil and u.login=?  " 
 
		/>
	   </security:authentication-provider>
	</security:authentication-manager>


</beans>